#!/bin/bash
#custom_tmp=/tmp

# Need to handle raw content
# Need to custom install or not optdepends

repo='https://github.com/sirius-2/aurin.git'

c_dir="$(pwd)"
mirror_url='hub.fastgit.xyz'
mirror_raw_url='raw.staticdn.net'

tmp_dir=/tmp
#readtmp_dir=$(sed -n '2p' $0 | awk -F 'custom_tmp=' '{print $2}')
eval "$(sed -n '2p' $(which aurin) | sed 's/.//')"
if [[ ! $custom_tmp == '' ]];then
    tmp_dir=${custom_tmp}
fi

mkdir -p $tmp_dir

handle(){
    baseurl=$(echo $1 | awk -F '/' '{print $3}')
    name=$(echo $1 | awk -F '/' '{print $4}' | awk -F '.' '{print $1}')

    workdir=${tmp_dir}/${name}

    if [[ ${baseurl} == 'aur.archlinux.org' ]];then
        if [[ ! -d ${workdir} ]];then
            git clone $1 $workdir
        fi
        if [[ "$(ls ${workdir})" == "" ]];then sudo rm -rf ${workdir};echo '[ - ] No AUR Package found';exit 1;fi

        cd ${workdir}
        if [[ -f PKGBUILD ]];then

            eval "$(sed -n '/depends=/,/)/p' PKGBUILD)"

            alldepends=("${depends[@]}" "${makedepends[@]}" "${optdepends[@]}")
            sudo pacman -Sy

            for dp in "${alldepends[@]}"
            do
                echo "[ + ] depend: $dp" && echo -n '      '
                sudo pacman -S --noconfirm --needed ${dp%:*}
                if [[ $? != 0 ]];then aurin -p $dp;fi
            done

            sed -i "s/github.com/${mirror_url}/g" PKGBUILD
            sed -i "s/raw.githubusercontent.com/${mirror_raw_url}/g" PKGBUILD
            makepkg
            if [[ $? != 0 ]];then echo '[ - ] Found unhandled issue';exit 1;fi
            sudo pacman -U *.pkg.tar.*
        else
            echo '[ - ] No PKGBUILD found'
            cd ${c_dir}
            exit 1
        fi
        sudo rm -rf ${workdir}
    else
        echo '[ - ] No AUR Package found'
    fi
}

aurinbin(){
    biinname=$(echo $0 | awk -F '/' '{print $2}')
    if [[ $USER == 'root' ]];then
        binpath='/usr/local/bin'
    else
        binpath="$HOME/.local/bin"
        if [[ ! -d ${binpath} ]];then mkdir -p ${binpath};fi
    fi

    case $1 in
        u | update)
            filepath=${tmp_dir}/aurin/aurin
            git clone ${repo} ${tmp_dir}/aurin
            ;;
        *)
            filepath=$(pwd)/${biinname}
    esac
    if [[ -f ${filepath} ]];then sudo cp -f ${filepath} ${binpath}/${biinname};sudo chmod +x ${binpath}/${biinname};sudo chmod 777 ${binpath}/${biinname};fi
    sudo rm -rf ${tmp_dir}/aurin
    echo '[ + ] aleady in PATH'
}

case $1 in
    -i | --install)
        handle $2
        ;;
    -m | --mirror)
        mirror_url=$2
        if [[ "$(echo $3 | awk -F '.' '{print $1}')" == 'raw' ]];then
            mirror_raw_url=$3
            handle $4
        else
            handle $3
        fi
        ;;
    -d | --default)
        mirror_url='github.com'
        mirror_raw_url='raw.githubusercontent.com'
        handle $2
        ;;
    -p | --package)
        handle "https://aur.archlinux.org/${2}.git"
        ;;
    -b | --bin)
        case $2 in
            u | update)
                aurinbin u
                ;;
            *)
                aurinbin
        esac
        ;;
    -t | --tmp-dir)
        user_tmp="$(sed 's/[\t ]\+//g' <<< $2)"
        if [[ ! $2 == '' ]];then
            sed -i "2c#custom_tmp=${user_tmp}" $(which aurin)
            echo "[ + ] tmp directory: $(sed -n '2p' $(which aurin) | awk -F '=' '{print $2}')"
        else
            sed -i "2c#custom_tmp=/tmp" $(which aurin)
            echo '[ - ] default to /tmp'
        fi
        ;;
    -u | --uninstall)
        if [[ $USER == 'root' ]];then
            sudo rm -f /usr/local/bin/aurin
        else
            sudo rm -f $HOME/.local/bin/aurin
        fi
        ;;
    -h | --help)

cat<<EOF

aurin [arg]

arg:
    -i | --install    install through buildin mirror
    -m | --mirror     custom aur domain
                            eg.
                            aurin -m githubmirror.xx aur_git_url
                            aurin -m githubmirror.xx raw.xxxxx.xx[optional] aur_git_url
    -d | --default    default github domain
    -p | --package    use simple package name eg. yay
    -b | --bin        copy this file to PATH
                            eg. update:
                            aurin -b u
    -t | --tmp-dir    custom tmp directory [default /tmp]
                            eg.
                            aurin -t ~/.tmp
    -u | --uninstall  uninstall this AUR tool
    -h | --help       show help
EOF
        ;;
    *)
        handle $1
esac
